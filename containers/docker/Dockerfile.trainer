#syntax=docker/dockerfile:1.7-labs
FROM nvidia/cuda:12.4.0-devel-ubuntu22.04 AS builder
RUN useradd -m appuser
WORKDIR /home/appuser/LIM

COPY src/ /home/appuser/LIM/src/
COPY pyproject.toml /home/appuser/LIM/pyproject.toml
USER root
RUN chown -R appuser:appuser /home/appuser && \
  apt-get update -o Acquire::Check-Valid-Until=false -o Acquire::AllowInsecureRepositories=true && \
  apt-get install --no-install-recommends -y \
  ca-certificates=20240203~22.04.1\
  libegl1=1.4.0-1\
  libgl1=1.4.0-1\
  libgomp1=12.3.0-1ubuntu1~22.04 \
  cmake=3.22.1-1ubuntu1.22.04.2 \
  git=1:2.34.1-1ubuntu1.12 \
  sudo=1.9.9-1ubuntu2.5 \
  libx11-dev=2:1.7.5-1ubuntu0.3 \
  python3-setuptools=59.6.0-1.2ubuntu0.22.04.3 \
  python3-pip=22.0.2+dfsg-1ubuntu0.6 \
  build-essential=12.9ubuntu3 \
  libx11-6=2:1.7.5-1ubuntu0.3 \
  mesa-utils=8.4.0-1ubuntu1 \
  libgl1-mesa-glx=23.0.4-0ubuntu1~22.04.1 \
  libglib2.0-0=2.72.4-0ubuntu2.5 \
  wget=1.21.2-2ubuntu1.1 && \
  apt-get clean && rm -rf /var/lib/apt/lists/* && \
  update-ca-certificates

USER appuser
RUN bash -c "set -euo pipefail; wget -q https://astral.sh/uv/install.sh; bash install.sh; rm install.sh"
ENV PATH="/home/appuser/.local/bin:${PATH}"
RUN uv venv && \
  . /home/appuser/LIM/.venv/bin/activate && \
  uv add setuptools

# BUILD OPEN3D FROM SOURCE
USER root
RUN apt-get remove cmake -y && \
  wget --progress=dot:giga https://cmake.org/files/v3.31/cmake-3.31.0-linux-x86_64.sh -O /opt/cmake.sh && \
  chmod +x /opt/cmake.sh && \
  bash -c "set -euo pipefail; yes | bash /opt/cmake.sh || true" && \
  bash -c "set -euo pipefail; ln -s /home/appuser/LIM/cmake-3.31.0-linux-x86_64/bin/* /usr/local/bin/" && \
  git config --global advice.detachedHead false && \
  git clone --branch v0.19.0 --depth 1 https://github.com/isl-org/Open3D.git /tmp/Open3D  && \
  mkdir -p /tmp/Open3D/build
WORKDIR /tmp/Open3D/build
ENV PATH="/home/appuser/LIM/.venv/bin:${PATH}"
RUN bash -c "set -euo pipefail; yes | bash /tmp/Open3D/util/install_deps_ubuntu.sh || true" && \
    . /home/appuser/LIM/.venv/bin/activate && \
    bash -c "set -euo pipefail; cmake \
    -DBUILD_PYTHON_MODULE=ON \
    -DPYTHON_EXECUTABLE=/home/appuser/LIM/src/.venv/bin/python \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_CUDA_MODULE=ON \
    -DCMAKE_CUDA_ARCHITECTURES='70;75' \
    -DENABLE_HEADLESS_RENDERING=ON \
    -DUSE_SYSTEM_GLEW=OFF \
    -DUSE_SYSTEM_GLFW=OFF \
    -DBUILD_WEBRTC=OFF \
    ..; \
    make -j'$(nproc)'; \
    make pip-package"
WORKDIR /home/appuser/LIM
USER appuser
RUN uv sync && \
    uv pip install --no-deps /tmp/Open3D/build/lib/python_package/pip_package/open3d-0.19.0+1e7b174-cp311-cp311-manylinux_2_35_x86_64.whl && \
    uv pip install torch-scatter -f https://data.pyg.org/whl/torch-2.6.0+cu124.html
USER root
RUN rm -rf /tmp/Open3D

ENV CUDA_HOME=/usr/local/cuda
ENV PATH="${CUDA_HOME}/bin:${PATH}"
ENV TORCH_CUDA_ARCH_LIST="7.0;7.5"

# ADD FRNN
WORKDIR /home/appuser/LIM
RUN git clone --recursive https://github.com/lxxue/FRNN.git /home/appuser/LIM/lib/FRNN/ && \
    uv pip install --no-build-isolation /home/appuser/LIM/lib/FRNN/external/prefix_sum/ && \
    uv pip install --no-build-isolation -e /home/appuser/LIM/lib/FRNN
USER appuser

# Compile cpp libraries
WORKDIR /home/appuser/LIM/src/LIM/cpp/
RUN bash -c "set -euo pipefail; bash compile.sh -j$(nproc)"
WORKDIR /home/appuser/LIM/
 
FROM nvidia/cuda:12.4.0-runtime-ubuntu22.04 AS production
RUN useradd -m appuser
WORKDIR /home/appuser/LIM
RUN apt-get update && apt-get install --no-install-recommends -y \
    libgomp1 \ 
    libgl1-mesa-glx \
    libglfw3 \
    libglew2.2 \
    libosmesa6-dev=23.2.1-1ubuntu3.1~22.04.3 && \
    rm -rf /var/lib/apt/lists/**

ENV PATH="/home/appuser/.local/bin:${PATH}"
ENV PATH="/home/appuser/LIM/.venv/bin:${PATH}"
USER appuser
COPY --from=builder --chown=appuser /home/appuser/LIM/lib/FRNN /home/appuser/LIM/lib/FRNN
COPY --from=builder --chown=appuser /home/appuser/LIM/src/ /home/appuser/LIM/src
COPY --from=builder --chown=appuser /home/appuser/.local /home/appuser/.local
COPY --from=builder --chown=appuser /home/appuser/LIM/.venv .venv
